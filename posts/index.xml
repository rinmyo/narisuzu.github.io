<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 鳴鈴</title><link>https://ming.ling.moe/posts/</link><description>Recent content in Posts on 鳴鈴</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 11 May 2022 19:02:55 +0900</lastBuildDate><atom:link href="https://ming.ling.moe/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>個人実績</title><link>https://ming.ling.moe/posts/cv/</link><pubDate>Wed, 11 May 2022 19:02:55 +0900</pubDate><guid>https://ming.ling.moe/posts/cv/</guid><description>個人実績 全てのプロジェクトは Github で見られます。 本文では内容と主要な技術を紹介いたします。
個人ブログ（このサイト） 自分のブログです。自分の発想を記述するために、高校生のころから、最新技術を使っていくつのブログを作りました.
repo
主要な技術：
Hugo Markdown $\KaTeX$ Github pages CI(Github Action) UROJ-rs 大学の卒業研究の作品で、Universal Railway Online judge という鉄道の電子連動装置（computer interlocking）のシミュレーターのバックエンドです。この作品は web を基づいてフロントエンドとバックエンド両方あるプロジェクトです。どちらも最新の技術を使ったものです。
repo
主要な技術：
Rust: Mozilla によって開発する高効率化コンパイル式現代的なプログラミング言語である。バックエンドを開発するにはつかいました GraphQL: Facebook によって開発するフロントエンドとバックエンドを通信するフレームワークである PostgreSQL: データベースソフトウェアである Tokio: Rust async runtime library actix-web: rust web framwork. Dijkstra&amp;rsquo;s algorithm: グラフ理論のアルゴリズム UROJ-web 上記の UROJ-rs のフロントエンドです
repo
主要な技術：
React.js: Facebook によって開発する有名なフロントエンドライブラリーである。フロントエンドで使いました GraphQL: Facebook によって開発するフロントエンドとバックエンドを通信するフレームワークである Two.js: ブラウザでベクトル画像描くライブラリー TypeScript: マイクロソフトによって開発する JavaScript よりいいプログラミング言語です Node.js: web server runtime これらは現代的なウェブ開発技術である、伝統的な HTML, CSS, JS に基づくものです。すなわち、HTML, CSS, JS　ができるには決まっています。</description></item><item><title>如何構造複數域</title><link>https://ming.ling.moe/posts/complex-number/</link><pubDate>Mon, 13 Sep 2021 20:57:55 +0800</pubDate><guid>https://ming.ling.moe/posts/complex-number/</guid><description>$$ \gdef\imi{\mathrm{i}} $$
序 其實複數運算的幾何意義和代數意義是十分割裂的. 以至於我們不得不通過證明二者的等價性才能確認他們具有相同的行爲. 然而在學校中學到的複數向來是從 $\sqrt{-1}$ 等於幾開始的, 也是從此定義的.
但在使用時, 卻常常使用其幾何意義，即模和幅角. 僅在計算加法時才勉爲其難的求下反三角函數以方便二部相加.
但是從實數定義的經驗中可以看到. 對於幾個等價的命題, 只需定其中一個爲公理. 則其餘皆爲基本定理. 所以本文不以 $\imi \coloneqq \sqrt{-1}$ 作爲虛數單位的定義. 而是以幾何直觀感受到的平面點集出發來定義複數.
Euclid 二維空間 我們定義無理數的時候是使用 Dedekind 分割有理數域來完成的. 但 Dedekind 定理表示實數是完備的，因此必然不能再在一根充滿了有理數和無理數的數軸上做文章. 但是, 一根不行可以兩根. 而且很方便的是, 我們已經有了一種集合, 其每個元素是實二元組. 那就是 $\R^2$. 高中我們就學過的平面向量, 再熟悉不過了.
但我們說 $\R^2$ 不是一個數域, 因爲其未定義封閉的乘法運算. 仔細想來 $\R^2$ 上只有
加法: $(x_1, y_1) + (x_2, y_2) = (x_1+x_2, y_1 + y_2)$ 數乘: $k(x, y) = (kx, ky)$ 內積: $(x_1, y_1)\cdot (x_2, y_2) = x_1x_2 + y_1y_2$ 顯然易證, 加法運算封閉, 滿足交換和結合律.</description></item><item><title>背單詞嘍</title><link>https://ming.ling.moe/posts/en-vocabulary/</link><pubDate>Wed, 11 Aug 2021 22:09:03 +0800</pubDate><guid>https://ming.ling.moe/posts/en-vocabulary/</guid><description>序 本文是爲了應付應對 TOEIC® 考試和日常應用而準備的. 鳴鈴在用的單詞書是新東方的《3500 词搞定托业考试》。不得不說的是此書的分類真的超亂，基本沒有參考意義。
因爲書中有些詞是鳴鈴本就會的，所以本頁只記錄生詞，即單詞釋義中有任何一項不知者。對於學會的生詞會進行標記。而本頁面中會使用到一些標記，在此列出:
標記 含義 OM 本義 EM 引申 C 可數名詞 U 不可數名詞 T 他動詞 I 自動詞 11 Aug abide /əˈbaɪd/ OM to live or stay somewhere, wait, wait for
abide with: live or stay with sb. EM endure, sustain, stay firm under
abide by: + rules (不情願地, 不得不)遵守規則 EM tolerate, bear, put up with
can&amp;rsquo;t abide sb/sth: cannot bear sb/sth 與 「不共戴天」 的用法類似. 形容難以忍受，以至於無法和 sb/sth 待在一起.</description></item><item><title>記一次命令列應用的開發思路</title><link>https://ming.ling.moe/posts/developing-peano/</link><pubDate>Fri, 16 Jul 2021 17:39:26 +0800</pubDate><guid>https://ming.ling.moe/posts/developing-peano/</guid><description>序 鳴鈴此前發過MC:JE 鯖策劃案一文. 其中遇到了幾個棘手的問題.
文件管理困難：需要在本地調試好後使用 FTP 上傳至伺服器上 版本控制困難: 同樣需要 FTP, 而且因 MOD 衆多, 所以只要有更新就要傳一次, 十分麻煩. 上述兩個問題皆可透過 Git 來解決. 但是有一個弊端, 需要使用 LFS 來做大體積二進位檔案的存儲, 而且一個一個的下載再 Git Push, Git Pull 又太過麻煩.
因此決定開發一個 Command Line 應用來解決這些問題. 當然對於雲端存儲依舊需要用到 Git
功能需求 備份 備份採用 Git 實現, 需要存儲的內容只有存檔和配置文件. 而所有的二進位文件均不備份.
備份的目的是防止各種原因引起的本地數據丟失. 所以遷移伺服器或重裝系統時也毋須特意備份.
伺服器控制 代替 start.sh 控制伺服器的啓停，同時實現自動重啓/定時重啓功能
Mod 管理 實現類似 npm 或 maven 這樣的包管理功能. 管理mod, 實現mod的暫時禁用、安裝、卸載、升級等功能</description></item><item><title>常微分方程與無能的我</title><link>https://ming.ling.moe/posts/all-about-ode/</link><pubDate>Wed, 07 Jul 2021 22:07:12 +0800</pubDate><guid>https://ming.ling.moe/posts/all-about-ode/</guid><description>$$ \gdef\dif{\mathop{}\!\mathrm{d}} $$
序 解微分方程，甚至於說解方程，是方法大於意義的一種過程. 從高斯消元法開始，我們都發現，解方程的學習就是在尋求符合某種特定模式（Pattern）的方程的具體解法. 因此對於之前的各種方程的分類，其一方面表現了一定現實意義的象徵，同時對我們而言，也是選取何種方法去解它的一種信號. 這種同類的方程是共用某種「模型」的抽象，用 CS 的話說，就是方程這種數學抽象，允許我們在各種不同的場景中復用(Reuse)這些前人總結的結論.
很顯然的就是在古典控制理論中，一階電路、彈簧阻尼器系統這兩個完全不同的情境都可以抽象成模式相同的一階微分方程，而如果我們學會了一階微分方程，就能同時解決這兩種情境下的問題. 而這種解決方程的方法，應該是不含有任何現實意義的，即方程中的任何參量於變量，都是沒有任何含義的. 只有在具體的環境下，量才能有具體的意義. 這就是鳴鈴之前說的解方程，是方法大於意義的一種過程. 在方程約束的數學模型中，解決問題的流程大概可以分爲兩步，列方程（建模）和解方程. 而在進入後一個步驟後，我們的焦點就不應該停留在現實意義上了. 直到得到解（解集、通解或特解），變量才又重新有了直觀的意義.
在理工科中，抽象化的概念總是讓人難以理解. 但抽象帶來最大的好處，就是增加了過程或結構的通用性. 就像我們能把電路、交通、人物關係都能抽象成圖，從而可以在不同的領域中復用圖論中的結論. 因此不僅是方程, 我們可以將結論也抽象一下, 對於任何事物: 抽象程度愈高, 具體意義愈少.
對於鳴鈴個人體驗而言，在同等的抽象程度下，學習方法性的知識比學習概念性的知識要困難的多. 記憶方法性的知識在於練習（做題）.
而本文之目的，並非在於教條化的記憶或背誦這些方法. 如果不能知其因何可行, 總是令人覺得不安. 單純的將解法和知識當作教條, 這纔是我所認爲的「做題家」, 而我想要的知識是沒有教條的, 除了基本公理是不證自明之外.
一階微分方程 一階微分方程可以寫成兩種等價的形式 $$\frac{\dif y}{\dif x} = f(x, y)$$ 或 $$P(x,y)\dif x + Q(x,y)\dif y = 0$$ 只要令 $f(x,y) = -\displaystyle\frac{P(x,y)}{Q(x,y)}$, 就可證明二者等價.
下面一階微分方程的解法, 都是基於這兩種形式之一的. 但單就「一階微分方程」而言是沒有什麼足夠的特徵或稱性質讓我們利用以解方程的. 方程之所以有法可解, 一定是他擁有某些具體的可利用的性質, 而這些性質往往來自於方程的形式或方程中所含函數的性質. 在意識中建立某種模式到某種方法的映射, 便可作爲被我們解方程的規律.
一階可分離變量 有些微分方程，他們的變量是可以分離至等號兩邊的. 形如 $$\frac{\dif y}{\dif x} = g(x)h(y)$$ 對於這樣的微分方程，其解法應遵從以下兩個步驟</description></item><item><title>以OOP的視角看が和の</title><link>https://ming.ling.moe/posts/no-and-ga-under-oop-views/</link><pubDate>Mon, 05 Jul 2021 12:59:56 +0800</pubDate><guid>https://ming.ling.moe/posts/no-and-ga-under-oop-views/</guid><description>封裝是典型的 OOP 的特徵之一（另外兩個是繼承和多肽多態）
封裝 拿以下 Java Class 举例 (省略方法實現)
class Human { double name; // 名前 double weight; // 体重 double height; // 身長 //挨拶 Human helloTo( Human target ) { // do something return this; }; //寝ること Human sleep( Time time ) { // do something return this; }; }; 其中返回 this 是爲了方便鏈式調用。使用成員變量和方法如下
Human me, you; // omit some codes here ... // use member variables me.name; you.height; // use method me.</description></item><item><title>傳輸線模型（未完稿）</title><link>https://ming.ling.moe/posts/all-about-transmission-line/</link><pubDate>Sat, 03 Jul 2021 20:54:56 +0800</pubDate><guid>https://ming.ling.moe/posts/all-about-transmission-line/</guid><description>$$ \gdef\dif{\mathop{}\!\mathrm{d}} \gdef\elr{\mathrm{e}} $$
序 傳輸線模型是最簡單的分佈參數電路. 雖說如此, 但因不是強電相關專業, 學電路時老師並沒有講到這裏. 所以也就只能自學. 因此鳴鈴想撰文釐清一下學習思路、總結一下學習成果.
在本節內容之前學到的電路, 無論是探究穩態的正弦交流或直流, 抑或者探究暫態過程的各種響應. 其電路的模型都是集總參數電路. 集總參數電路是由集總元件連接成的電路, 其中的詳細定義鳴鈴也不怎麼會背, 引用 一下 集總電路中的內容：
集總元件是指元件大小遠小於電路工作頻率相對之電磁波波長時, 對所有元件之統稱. 對於信號而言, 不論任何時刻, 元件特性始終保持固定, 與頻率無關. 相反地, 若元件大小與電路工作頻率相對之波長差不多或更大的時候, 則當信號通過元件之時, 元件本身各點之特性將因信號之變化而有所不同, 則此時不能將元件整體視為一特性固定之單一體, 而應稱為分布元件 （Distributed element）, 例如微波電路就是其中一個例子. 在此種電路中傳統之導線很可能會成為具有電感及電容串並聯特性之複雜組合.
總的來說, 不论集總还是分布, 都是在某些條件下, 電路元件的一種抽象化模型. 和質點、點電荷等概念類似, 集總參數是和空間分佈無關的. 而分佈參數就類似於密度的定義, 其分布是和空間相關的. 不如說在傳輸線的場景中, 分佈參數本身就是密度.
建模 Heaviside 所提出的傳輸綫是這樣一種模型, 對於平行直導線或同軸綫間, 不可避免存在不完全絕緣的電介質. 因此而產生綫間的漏電流. 對於導線間, 我們可以認爲綫間存在寄生的電容和電導連續分佈. 而沿着線上, 必然存在壓降且電流會在週遭形成磁場, 因此可以認爲導線上存在電阻和電感連續分佈.
對於空間中某個變量連續分佈的模型. 其實我們有現成的模型來解決, 那就是密度（廣義上的）. 如果我們沿着這個思想, 就可以構建沿着綫均勻分佈着無窮多無窮小的集總參數二端口網絡的模型. 如下圖所示
傳輸線模型 如同大多數「密度」的定義, 我們需要求的是傳輸線的參數分佈服從怎樣的規律. 而這些規律又能得出怎樣的結論. 不難看出, 對於傳輸線而言, 其參數應當是一種綫密度, 即其分佈的空間爲 $\R$.</description></item><item><title>MC:JE 鯖策劃案（更新中...）</title><link>https://ming.ling.moe/posts/new-mc-server/</link><pubDate>Thu, 01 Jul 2021 16:59:16 +0800</pubDate><guid>https://ming.ling.moe/posts/new-mc-server/</guid><description>列位！諸君！鳴鈴最近和朋友在策劃一個社區向的伺服器，落成後歡迎來玩！
綱要 該伺服器名稱未定，但其應有以下特徵：
私有：不向陌生人開發 在線：Online Mode 香草：保留 Vanilla 風格地 Modded 沉浸：Mod 以增強遊戲PE與機能爲要 求新：在已有 Mod 兼容的前提下，使用最新版本的 Minecraft. 爲什麼要私有呢，因爲大家都有自己的正業，所以希望儘量降低管理成本。 因此若汝想一起來玩的話，需要接受適應性審查。或者由一名或以上的本服玩家擔保，邀請汝加入我們。
爲了避免任何潛在的政治風險，Online Mode 是必要的，因爲 Online Mode 下的聊天信息（包括其他的數據包）是經加密的1。 如此可以增加對話被監聽的難度。同時所有的聊天記錄將不會被保留。 在今後，或許會自己開發 Mod 將文字聊天與語音聊天功能轉移至獨立伺服器上，並增強加密算法。
Mod 列表 以上列諸項爲綱，選取以下 Mod。
Name Tags 功能 問題 Adorn BS DE Add lots of furniture AppleSkin CO UI 飽食度 Better Biome Blend CO UI 生態域邊界優化 Better Third Person CO UI 第三人稱視角優化 bits and chisels DE 方塊雕刻 Canvas CO UI PE 光影依賴模組 Charm BS DE 更多風格的物品 Charmonium BS UI 添加 BGM Dark Paintings DE 增加一些畫作 Entity Culling CO PE 實體渲染優化 ExtraSounds CO DE 增加 UI 操作的音效 Farmer&amp;rsquo;s Delight BS DE 增加農業和食品機能 Server-side is NA yet FerriteCore BS PE better memory performance First-person Model CO DE 添加第一人稱視角優化 Grim&amp;rsquo;s Transportables BS DE 中世紀馬車 Immersive Portals DE 好看的傳送門 Conflicting with Canvas Lithium SO PE 優化 game physics, mob AI, block ticking, etc Mod Menu CO UI 遊戲內管理 Mod Not Enough Animations CO DE 增加動作動畫 Not Enough Crashes CO DB 打印錯誤信息 Phosphor SO PE 光照優化 Outdated Simple Voice Chat BS UI 語音聊天 瓶頸時考慮替換 mumblelink Smooth Boot CO PE CPU 優化 Spark BS PE RAM 優化 Physics Mod UI 添加物理效果 Presence Footsteps DE 腳步聲優化 Dropz UI 落體物理 Outdated Fluid Physics SO FN 流體物理 Will Crash Fabric Seasons DE FN 加入季節變化 上述 Tags 中</description></item><item><title>神都二日遊記</title><link>https://ming.ling.moe/posts/lakuyou-2-days/</link><pubDate>Thu, 01 Jul 2021 07:39:54 +0800</pubDate><guid>https://ming.ling.moe/posts/lakuyou-2-days/</guid><description>鳴鈴在家閒得沒事幹，於是前兩日前去洛陽轉了轉，權當畢業旅行。但去洛陽的兩天真的有夠熱的，縱使撐着傘，依然感覺「背灼炎天光」。
龍門石窟 龍門石窟確實古老，而且聽說文革時被紅小將們砸了不少。但鳴鈴一非佛教徒、二非學者、三非雕塑造像藝術家，對其亦沒有什麼太大的興趣。（即便走在伊水畔也絲毫不涼快就是了）
蔣宋別墅 唯一令鳴鈴感興趣的是位於龍門石窟景區伊水東岸香山上的蔣宋別墅。這個別墅是當時河南政府爲先總統夫婦修築的。位於中國大陸並同中國國民黨相關的景點，必然存在國父遺像、🇹🇼 青天白日滿地紅國旗和青天白日旗。當然啦，這裏也不例外.
會客廳 會議室 遺民淚盡胡塵裏
南望王師又一年
&amp;mdash;&amp;mdash; 陸游
鳴鈴什麼時候才能逃離胡塵呢。
才能自由 親愛精誠 唯一遺憾的是，🇹🇼 國旗沒有飄在旗杆上。 話說鳴鈴要是在那邊唱三民主義吾黨所宗以建民國以進大同的話，會被尋釁滋事的吧（怖いよ～
白馬寺 白馬寺被長者稱爲「中國第一咕殺古剎」，當然，白馬寺名副其實。不得不提的一點是, 鳴鈴最喜歡白馬寺的門票：
門票正面 門票反面 馬寺的門票所有漢字繁體直排，使用字體得當，寺院介紹以文言著，背景樸質而典雅，紙的撓度和表面粗糙度合適。無比重要的是，沒有什麼「國家xx級景區」、「重點xx保護單位」、「社會主義核心價值觀」、「依法納稅xx」之類意識形態的污染。票面上印有當年的干支，很有收藏價值。
你是不是想問鳴鈴爲什麼不給時間和編號打馬賽克？嗯，鳴鈴覺得這種東西史塔西或者蓋世太保是很好調查的，如果他們真的想的話。
泰國風格佛殿和緬甸風格佛殿對鳴鈴而言是很新鮮的：
另外在泰國風格佛殿的某處門前放着這個牌子：
超級可愛 關林 關林係關二爺的墓（雖說只有頭葬在這裏）。洛陽的這個關林是曹操爲其修築的。關林中有自大明國起至當代各種人立的碑，說實話滿有趣的。下面按朝代分類一下拍到的碑記。
大明國 鳴鈴注意到：明朝時就已經開始混用「国」和「國」，還有「歷」和「曆」了。但是作爲年號應該是有唯一正確的寫法吧？
大清國 下圖是乾隆年代所建的香爐，上面的花紋很漂亮，現在依然在使用。立於其前，雖然很熱，但更重要的是能嗅到歷史的氣息（別鬧啦，只是因爲爐內在焚香吧 -`д´- ） 此類有很長的歷史，卻依舊使用中，而非列於防爆玻璃展臺之內的文物真的感覺很奇妙。
一般提到文物，給鳴鈴的印象就算不是陳設於展臺之上，也是石碑匾額之類單純供人觀賞的器物。所以鳴鈴就把這個還在使用中的香爐就拍了下來，這個香爐左右兩邊各有一個，鳴鈴攝的是右邊那個。
中華民國 僞朝 沒有什麼值得拍攝的 :)
跋 此行洛陽，鳴鈴覺得需要注意切不可在仲夏酷暑隨便出來玩，雖然鳴鈴沒有煤紋病，但沒有做好防曬措施是可能會誘發皮膚癌的！縱使去洛陽這種北方城市好像也不太行的樣子。，可以的話，儘量遠離北迴歸線吧 QAQ.</description></item><item><title>Hugo ❤ Github</title><link>https://ming.ling.moe/posts/hugo-with-all-github/</link><pubDate>Sat, 26 Jun 2021 18:50:11 +0800</pubDate><guid>https://ming.ling.moe/posts/hugo-with-all-github/</guid><description>序 鳴鈴曾經建過的 blog 也不少，用過 WordPress, Typecho 等基於 PHP 的 blog 軟體，最近也用過 Hexo 這種靜態頁面的 blog 軟體，最終因爲一些鳴鈴不願意透露的原因選擇了當前的 Hugo. 爲了省錢，敝站完全使用 Github 來構建，因此對於落魄的鳴鈴來講十分合適 (
如果你想將本文作爲教程使用，至少需要以下知識儲備：
git 和 Github Hugo 靜態網頁開發 Blog 程式 Hugo 類似於 $\LaTeX$ 將 .tex 檔案編譯爲 .dvi 或者 .pdf，其可以將十分利於人類讀寫的 Markdown 檔案編譯爲 blog 所需的靜態網頁.
具體的使用方法可見於此
部署 在編輯完成 Blog 後，使用 hugo server 以編譯，hugo 會將網站輸出在 \public 目錄下。如果你有虛擬主機或者雲伺服器的話，便可以使用 Nginx 或者 Apache 之類的網頁伺服器來部署你的網頁了。
但鳴鈴使用 Github Pages 來承載網站，並使用 Github Actions 來實現自動化部署到 Github Pages 上.
首先我們需要兩個 repositories, 一個用來放 Hugo 的 blog 源碼，另一個用來放編譯生成的網站(用作 Github Pages).</description></item><item><title>多諧振蕩器</title><link>https://ming.ling.moe/posts/all-about-multivibrator/</link><pubDate>Fri, 25 Jun 2021 04:21:11 +0800</pubDate><guid>https://ming.ling.moe/posts/all-about-multivibrator/</guid><description>BJT實現 無穩態多諧振盪器 運放實現 邏輯門實現 555定時器實現</description></item><item><title>動詞接續授受動詞的行爲</title><link>https://ming.ling.moe/posts/jyu-jyu-dou-si/</link><pubDate>Sat, 12 Jun 2021 13:23:10 +0800</pubDate><guid>https://ming.ling.moe/posts/jyu-jyu-dou-si/</guid><description>衆所周知的，日語中的主語常常隱藏因此會產生一系列難解的問題。本文所描述的就是授受動詞動詞接續授受動詞的行爲。 爲什麼會有這個問題呢，最初學習「 V て下さい」的時候，被生硬的翻譯成了「請」。之後又學習了：
てくれない てくる てあげる てやる てくださる てくださいませんか てくれないでしょうか ていただけませんか ていただけないでしょうか ぁせていただけませんか ぁせていただけないでしょうか ぁせてもらえないでしょうか 等等動詞或使役動詞接續授受動詞的用法。「能不能&amp;hellip;」「請&amp;hellip;」「請允許我&amp;hellip;」這種翻譯學習方法實在過於難受，沒有很好的復用性，於是某一天在看新聞時看到了店鋪的「&amp;hellip;休ませていただきます」就考慮了，一瞬間魚認爲其動詞是「いただく」那麼主語應該是店家吧，而且按照想表達的意思，「休む」也應該是店家的行爲。但再一想，「休む」使用的是使役型呀，那麼主語不應該是顧客嗎？但「いただく」又是拿來的意思，主語應該是纔店家對吧。
然後花五分鐘仔細思考回想對比了幾個授受動詞的例句後，就有了這篇文章的內容。事實上，考慮非從句的一般授受句型，授受動詞的主語和雙賓（其實不準確，に修飾的不是賓語，但這裏借用英文的雙賓語的概念）分別是物品的接受或發送者(或者相反)，那麼這就是一種約束。現在考慮的是在從句情況下，這種約束關係會帶來怎樣的效果。對於授受動詞而言上述的從句都是雙賓語的「賓語從句」，不難理解，從句的動作便是主句主語傳遞的對象，和非從句情況的授受動詞一樣。
下面來分類討論一下。
分類討論 やる &amp;amp; 上げる &amp;amp; 申し上げる 這三個動詞且不論尊敬禮貌與否，其接續名詞方向都是從主語向雙賓的。即被傳遞的物品是主語發出，而雙賓接受的。
例：本を上げる
graph LR 主語--本-->雙賓 書是由主語發出的。再考慮從句的情形，假設以下從句
例：遊んであげる
按照上圖的約束類比得知，「遊んで」也應該由主語發出由雙賓接受（即作用於雙賓語）. P.s. 這句話來自動畫《蜘蛛ですが、なにか？》22 話，魔王所說.
くれる &amp;amp; 下さる 例：牛丼をください graph LR 主語--牛丼-->雙賓 再考慮從句情況，典型例句爲「座ってください」。 和上面的例子類比分析一下，「座って」這個動作作爲被授受的主體，其應該受「下さる」的方向約束。即必須是由 主句動詞的主語發出，而雙賓語接受的。和前例正好相反。
從圖可知，くれる和上げる的模式是完全相同的，其方向都是從主語到雙賓語的。二者唯一的區別是句子成分的身份（不是本文討論的內容，但一個「上」一個「下」也應該能管中窺豹）。
もらう &amp;amp; 頂く 例：プレセントをもらう graph RL 雙賓--プレセント-->主語 典型例句爲「教えてもらった」，其中もらう約束了主句雙賓語必然是物品的提供者或者動作的主語，在例句中 即從句「教えて」的主語是主句的雙賓語。而在前兩種動詞，從句和主句的主賓都是一致的，而「もらう」和「いただく」卻是相反的，這一點也是第一時間難以反應的原因。
纏め 由以上三例可以看出，主句和從句的主句是沒有什麼關係的。文法上，主句的主語只由主句動詞決定，從句的主語只由從句動詞決定。但是在主語隱藏的情況下，是可以通過授受動詞的方向約束和從句動詞的形式與含義來推斷出主語是誰的。比如開始的「&amp;hellip;休ませていただきます」，顯然從主句可以推斷出這句話的主語接受到了某人的許可可以休假，然後從句是休假的使役型，因爲自己讓自己休假顯然沒有什麼意義，那麼從句省略的主語就是看到看板的顧客們。</description></item><item><title>兩個人同時開一個門會怎麼樣？</title><link>https://ming.ling.moe/posts/what-if-two-different-people-open-the-door-simultaneously/</link><pubDate>Sat, 12 Jun 2021 11:02:02 +0800</pubDate><guid>https://ming.ling.moe/posts/what-if-two-different-people-open-the-door-simultaneously/</guid><description>破題 不，鳴鈴不是想討論一般情況下開門的問題，在《異世界食堂》動畫作品中，鳴鈴看到了一個彈幕：
「要是有兩個異世界人同時打開門會怎麼樣？」
在《異世界食堂》的世界觀中，每當禮拜六在異世界的各處就會出現通往「洋食のねこや」之門。開了這扇門就能進入 日本的「洋食のねこや」料理屋。那麼食堂只有一個，但傳送門有很多個，慾使彈幕中的問題有意義的話，更準確的表述應該是：如果有多個異世界人同時打開不同的門會怎樣？
怎樣？ 在全片中沒有出現過問題中的情況，也沒有解釋這種情況。當然作品中從沒發生過和概率爲零是兩個不同的概念。 那麼有什麼辦法可以解釋這個現象或者解決這個問題呢？首先定義一下什麼叫同時打開門，兩個開門事件在同時發生的概率爲 $0$ , 因爲一個時刻在數軸上是一個點，傳送門出現的時間是週六一天 $24$ 小時。那麼，我們不妨把一次從開門事件到關門事件的過程稱爲一個開放區間，兩個開放區間有重疊稱爲同時打開門。那麼問題就是，如何處理兩個不同的開放區間可能重疊的問題。
那麼矛盾在哪裏呢？在動畫畫面中可以看到，在從食堂朝向外面的畫面中，我們可以知道在食堂中是能直接看到外界的，同時也有從外向內的畫面。
炸肉餅二世的門外 炸蝦一世的門外 顯然地，不同的人開門，門外的景色是不同的。由此可知，開門過程是不能有阻塞的。
🎲概率 要解決這個問題，最簡單的就是讓兩個開放區間不可能重疊，即令異世界中所有的事物構成一個精密的系統，如波函數坍塌一般，當一個門被打開，則其他的門被打開的概率變爲 $0$，不是指門打不開，而是指在異世界中根本不可能有人去開其他門，通過某種魔法或者猶未可知的機理（畢竟傳送門就已經夠魔幻了）
🌊緩衝區 首先給出結論：使用任何形式的 channel，包括 std::sync::mpsc 和 chan 都是不行的。因爲真實世界中所要求的是絕對的同時。而使用 channel 時，channel 同時只能發送一個物件，其他的發送會被阻塞。因此是無法解決問題的。
那如果使用帶緩衝區的信道呢？當進入門後都先被傳送入一個佇列（可能是一片魔法空間）中，稱其爲 Buffer，然後遵循 FIFO 的過程，當門被關上時則將 Buffer 中下一位顧客傳入，而且因爲是異世界不需要考慮緩衝區大小的問題。這麼雖然可行，但是顯然不符合作品設定，因此也 PASS.
🔒互斥鎖 鳴鈴認爲最有意思也是最現實的就是使用互斥鎖（Mutex）了。顯然的，在動畫畫面中傳送門上也是存在門鎖的。那麼只需要作很小的設定就可以解決這個問題：當一個開門的上升沿（大概位於門把手被轉下去的時刻），互斥鎖會被上鎖，然後其他地方的傳送門就不能再次爲 Mutex 上鎖，從而即使壓下門把手也不能打開門，就如同門鎖被物理地鎖上了一樣。當門被關上後，Mutex 被解鎖，其他的門就可以再次打開了。
同時鳴鈴注意到了，在動畫中人餐後離開食堂關上門後，門就會消失掉。這裏可以設定爲門被析構的同時 Mutex 被解鎖，就像 std::sync::Mutex 一樣.
🔂引用計數 如果愛好燉牛肉的六柱之赤從別人的門走出來了，不就不妙了嗎？（從月球上的門走出來似乎沒什麼問題）
赤女王 那麼怎麼設計可以使顧客能夠從進入時的門走出呢？
我們可以設定當一名顧客進門時，會攜帶一個上下文 context （可以用魔法實現），其中包含了其所打開的門的引用 reference，從而在出門時食堂只需要讀取上下文中的傳送門引用就可以再次打開進入時的那扇門。
還有，在咖喱飯和炸蝦中可以看到，一個門是允許多個人進入的，那麼要怎麼實現才能讓由同一扇門進入的最後一人出門時，該處的門再消失呢。使用引用計數可以解決這個問題，異世界各處的門都有一個引用計數器，當顧客進門時會進行計數，每人進入就自增一，當計數器爲零時則門構析.
所有的內容都是鳴鈴突發奇想，請不要認真:) 另外，異世界的白色污染問題也值得討論</description></item><item><title>𝜀₀𝑬 不是 𝑫</title><link>https://ming.ling.moe/posts/epsilon-e-is-not-d/</link><pubDate>Thu, 10 Jun 2021 00:39:17 +0800</pubDate><guid>https://ming.ling.moe/posts/epsilon-e-is-not-d/</guid><description>$$ \gdef\dif{\mathop{}\!\mathrm{d}} $$
破題 《新概念物理教程. 電磁學》第四章中寫道
&amp;hellip; $$\oiint\boldsymbol{D}\cdot\dif\boldsymbol{S} = \sum q_0 \tag{1}$$ 比較兩式，似乎應有 $\boldsymbol{D} = \varepsilon_0\boldsymbol{E}_0$ ,即 $\boldsymbol{D}$ 與極化電荷無關. 我們在例題 7 和 8 中確實看到這種情況. 是否可以認爲電位移矢量 $\boldsymbol{D}$ 就是 $\boldsymbol{E}_0$ 的 $\varepsilon_0$ 倍呢？否！
&amp;hellip;
書中還説：
高斯定理只反映矢量場的一個側面，單靠他不能把矢量場的分佈完全確定下來. 反應矢量場另一個側面的是環路定理。
並介此來説明上述的結論。提到「側面」一詞總是令鳴鈴有種攪渾水的感覺。雖然鳴鈴相信其結論的正確性，但畢竟是沒有證明這若同時滿足了兩個「側面」則矢量場可被唯一確定（簡單猜測和唯一性定理有關，高斯定理和環路定理的微分形式可以推出 Poisson 方程，而後可以證明邊界條件下勢函數的梯度是唯一的，則電場是唯一的）。
因此呢，鳴鈴在圖書館坐了半個小時，想出了一個等效的證明，而且更加直觀。 求證： $$\boldsymbol{D} = \varepsilon_0\boldsymbol{E}_0 \tag{2}$$ 不總是成立
解 我的證法不是直接證明(2)式，而是證明它的一個等價命題.
由 $\boldsymbol{D}$ 的定義 $$ \boldsymbol{D} = \varepsilon_0\boldsymbol{E} + \boldsymbol{P} $$ 由 $\boldsymbol{E} = \boldsymbol{E}_0 + \boldsymbol{E}&amp;rsquo;$ $$ \boldsymbol{D} = \varepsilon_0\boldsymbol{E}_0 + \varepsilon_0\boldsymbol{E}&amp;rsquo; + \boldsymbol{P} $$ 則，預證 (2) 式，等價於求證 $$ \boldsymbol{P} = -\varepsilon_0\boldsymbol{E}&amp;rsquo; \tag{3} $$ 不總是成立.</description></item><item><title>符號定義</title><link>https://ming.ling.moe/posts/symbol-def/</link><pubDate>Wed, 09 Jun 2021 04:35:29 +0800</pubDate><guid>https://ming.ling.moe/posts/symbol-def/</guid><description>$$ \gdef\uv#1{\hat{\boldsymbol{#1}}} \gdef\dif{\mathop{}\!\mathrm{d}} \gdef\imi{\mathrm{i}} \gdef\imj{\mathrm{j}} \gdef\elr{\mathrm{e}} \gdef\Ft{\mathscr{F}} \gdef\Lt{\mathscr{L}} \gdef\dB{\mathrm{dB}} \gdef\Hz{\mathrm{Hz}} \gdef\Ohm{\Omega} \gdef\Volt{\mathrm{V}} \gdef\Amp{\mathrm{A}} \gdef\Wat{\mathrm{W}} \gdef\Col{\mathrm{C}} \gdef\Far{\mathrm{F}} \gdef\Var{\mathrm{Var}} \gdef\milli{\mathrm{m}} \gdef\micro{\mu} \gdef\kilo{\mathrm{k}} \gdef\grad{\mathop{\mathrm{grad}}} \gdef\dive{\mathop{\mathrm{div}}} \gdef\rot{\mathop{\mathrm{rot}}} \gdef\perm#1#2{^#1\! P_#2} \gdef\sgn{\mathop{\mathrm{sgn}}} $$
本文主要對站內的理工科符號設立標準。因爲博客所設分野較廣，所以呢對於符號的使用需要有一定的原則. 首先，對於標點符號，應采用半角標點。對於公式符號的標準，參考了 ISO、IUPAC、Unicode 和教科書等處的公式后，總結出僅適用於本站的標準。 在本站的其他文章當中底公式符號等若無特殊注明之處皆應爲本頁所載之含義。
一般而言，本標準有幾個原則所約束：
變量使用斜體 向量/矢量/矩陣等複合量使用粗體 算符和單位不適用斜體 矩陣使用方括號 $$ \gdef\uv#1{\hat{\boldsymbol{#1}}} \gdef\dif{\mathop{}\\!\mathrm{d}} \gdef\imi{\mathrm{i}} \gdef\imj{\mathrm{j}} \gdef\elr{\mathrm{e}} \gdef\Ft{\mathscr{F}} \gdef\Lt{\mathscr{L}} \gdef\dB{\mathrm{dB}} \gdef\Hz{\mathrm{Hz}} \gdef\Ohm{\Omega} \gdef\Volt{\mathrm{V}} \gdef\Amp{\mathrm{A}} \gdef\Wat{\mathrm{W}} \gdef\Col{\mathrm{C}} \gdef\Far{\mathrm{F}} \gdef\Var{\mathrm{Var}} \gdef\milli{\mathrm{m}} \gdef\micro{\mu} \gdef\kilo{\mathrm{k}} \gdef\grad{\mathop{\mathrm{grad}}} \gdef\dive{\mathop{\mathrm{div}}} \gdef\rot{\mathop{\mathrm{rot}}} \gdef\perm#1#2{\^#1\\! P_#2} \gdef\sgn{\mathop{\mathrm{sgn}}} $$ 通用 量的表記 符號 含義 自定義宏 $\boldsymbol{a}$ 向量 $\vec{\boldsymbol{b}}$ 行向量 $x$, $y$ &amp;hellip; 實變量 $z$, $s$ &amp;hellip; 複變量 $n$ 離散變量 $t$ 時間變量 $f()$ 實單值函數 $F()$ 複變函數 $\boldsymbol{f}()$ 向量值函數 $\boldsymbol{A}()$ 場函數 $x_n$ 序列 $\theta$ 角度，與$z$軸夾角 $\varphi$ 相角，輻角，功角，與$x$軸夾角 $\varOmega$ 立體角 $C$, $C_1$, $C_2$ &amp;hellip; 常量 $\uv\imath$, $\uv\jmath$, $\uv{r}$ &amp;hellip; 單位向量 \uv{} $\boldsymbol{e}_1$, $\boldsymbol{e}_2$ &amp;hellip; 基 $\boldsymbol{M}$ 矩陣 $\delta(t)$ 單位衝激函數 $u(t)$ 單位階躍函數 $\sgn$ 符號函數 \sgn $\varPhi$ 通量 常數 符號 含義 自定義宏 $\imi$, $\imj$ 虛數單位 \imi \imj $\elr$ 自然底數 \elr $\pi$ 圓周率 $\varepsilon_0$ 真空電容率 $\mu_0$ 真空電導率 $c$ 真空光速 算子或算符 符號 含義 自定義宏 $\dif$ 微分 \dif $x&amp;rsquo;$, $\dot{x}$, $\dfrac{\dif x}{\dif t}$ 導數 $\int$ 積分，積分器 $\Ft$ Fourier 變換 \Ft $\Lt$ Laplace 變換 \Lt $\cdot$, $&amp;lt;\ &amp;gt;$ 内積 $\times$ 外積 $\ast$ 捲積 $\Im$ 虛部 $\Re$ 實部 $\nabla$, $\grad$ 梯度 \grad $\nabla\cdot$, $\dive$ 散度 \dive $\nabla\times$, $\rot$ 旋度 \rot $\perm{n}{r}$ $n$中選$r$的排列數 $n \choose r$ $n$中選$r$的組合數 $\det$ 方陣的行列式 $^\mathrm{T}$ 轉置 常用過程量 符號 含義 自定義宏 $\dif t$ 時間微分 $\dif\ell$ 綫元 $\dif\boldsymbol\ell$ 有向綫元 $\dif{S}$ 面元 $\dif\boldsymbol{S}$ 有向面元 $\dif V$ 體元 $\dif\varOmega$ 立體角元 集合與空間 集合 含義 $\R$ 實數 $\mathbb{C}$ 複數 $\N$ 自然數 $\R^n$ $n$ 維歐幾里得空間 單位與量綱 單位 含義 自定義宏 $\Ohm$ 歐姆 \Ohm $\Hz$ 赫茲 \Hz $\dB$ 分貝 \dB $\Volt$ 伏特 \Volt $\Amp$ 安培 \Amp $\Wat$ 瓦特 \Wat $\Var$ 乏 \Var $\Col$ 庫倫 \Col $\Far$ 法拉 \Far $\degree$ 角度 $\micro$ $10^{-6}$ \micro $\milli$ $10^{-3}$ \milli $\kilo$ $10^3$ \kilo 科別 電磁學 符號 含義 例 $[\ ]$, $\dim$ 量綱 $[F] = N = \mathrm{kg\cdot m\cdot s^{-2}}$ $\rho$ 體密度 $\sigma$ 面密度 $\lambda$ 綫密度 電路理論 符號 含義 例 $\parallel$ 并聯 $\dot{Z_1}\parallel\dot{Z_2} = \dfrac{\dot{Z_1}\dot{Z_2}}{\dot{Z_1}+\dot{Z_2}}$ $A\phase{\varphi}$ 相量 $\dot{I}\coloneqq I\elr^{\imj\varphi_i} = I \phase{\varphi_i}$ 無機化學與分析化學 符號 含義 例 $[\ ]$ 濃度 $K_\text{a} = \dfrac{\ce{[H+][X-]}}{\ce{[HX]}}$ $\ominus$ 標準狀態 $\Delta_\mathrm{r} G_\mathrm{m}^\ominus$</description></item><item><title>Ma LA 5</title><link>https://ming.ling.moe/posts/ma-la-5/</link><pubDate>Thu, 09 Jul 2020 09:53:26 +0800</pubDate><guid>https://ming.ling.moe/posts/ma-la-5/</guid><description>題目 令
$$ A = \begin{bmatrix} 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \end{bmatrix} $$
證明當 $n \geq 4$ 時 $A^n = O$
$\forall n \geq 4$ $$ \begin{array}{rlll} A^n = A^4 A^{n-4} &amp;amp;= &amp;amp;\begin{bmatrix} 0 &amp;amp; 1 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \end{bmatrix} ^ 4 &amp;amp;A^{n-4}\\ &amp;amp;= &amp;amp;\begin{bmatrix} 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 1 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \end{bmatrix} ^ 2 &amp;amp;A^{n-4}\\ &amp;amp;= &amp;amp;\begin{bmatrix} 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \end{bmatrix} &amp;amp;A^{n-4} \\ &amp;amp;= &amp;amp;O \end{array} $$ 關聯內容 若 $A=(a_{ij})$ 爲一個 $m \times n$ 的矩陣，且 $B=(b_{ij})$ 爲一個 $n \times r$ 的矩陣，則乘積 $AB = C = (c_{ij})$ 爲一個 $m \times r$ 的矩陣，它的元素定義爲 $$ c_{ij} = \boldsymbol a_i \boldsymbol b_j = \sum_{k=1}^n a_{ik}b_{kj} $$ 下述法則對任何標量 $\alpha$ 和 $\beta$ 及矩陣 $A, B$ 和 $C$ 都是成立的.</description></item><item><title>Ma LA 4</title><link>https://ming.ling.moe/posts/ma-la-4/</link><pubDate>Wed, 08 Jul 2020 16:47:15 +0800</pubDate><guid>https://ming.ling.moe/posts/ma-la-4/</guid><description>證明行等價矩陣的性質：
Ⅰ. $A$ 與 $B$ 是行等價的，則 $B$ 與 $A$ 是行等價的.
Ⅱ. $A$ 與 $B$ 是行等價的，且 $B$ 與 $C$ 是行等價的， 則 $A$ 與 $C$ 是行等價的.
1. 因为 $A$ 與 $B$ 行等價，故 $$ B = E_kE_{k-1} \cdots E_1 A $$ 因此有 $$ \begin{aligned} (E_kE_{k-1} \cdots E_1)^{-1}&amp;amp;B =&amp;amp; (E_kE_{k-1} \cdots E_1)^{-1}E_kE_{k-1} \cdots E_1 &amp;amp;A \\ E_{1}^{-1}E_{2}^{-1} \cdots E_{k}^{-1}&amp;amp;B =&amp;amp; &amp;amp;A \\ &amp;amp;B =&amp;amp; E_kE_{k-1} \cdots E_1 &amp;amp;A \end{aligned} $$
因此 $A = E_{1}^{-1}E_{2}^{-1} \cdots E_{k}^{-1}B$，而 $E^{-1}$ 是 $E$ 同類型的初等矩陣.</description></item><item><title>Ma LA 3</title><link>https://ming.ling.moe/posts/ma-la-3/</link><pubDate>Wed, 08 Jul 2020 15:59:18 +0800</pubDate><guid>https://ming.ling.moe/posts/ma-la-3/</guid><description>題目 設 $A$ 是 $2 \times 2$ 的矩陣，其中 $a_{11} \neq 0$，設 $\alpha = a_{21}/a_{11}$. 證明 $A$ 可分解爲積的形式 $$ \begin{aligned} \begin{bmatrix} 1 &amp;amp; 0 \\ \alpha &amp;amp; 1 \end{bmatrix} \begin{bmatrix} a_{11} &amp;amp; a_{12} \\ 0 &amp;amp; b \end{bmatrix} \end{aligned} $$ 並求 $b$ .
直接對 $A = \begin{bmatrix} a_{11} &amp;amp; a_{12} \\ a_{21} &amp;amp; a_{22} \end{bmatrix}$ 因式分解十分困難，因此先計算
$$ \begin{aligned} \begin{bmatrix} 1 &amp;amp; 0 \\ \alpha &amp;amp; 1 \end{bmatrix} \begin{bmatrix} a_{11} &amp;amp; a_{12} \\ 0 &amp;amp; b \end{bmatrix} = \begin{bmatrix} a_{11} &amp;amp; a_{12} \\ a_{11}\alpha &amp;amp; a_{12}\alpha+b \end{bmatrix} \end{aligned} $$</description></item><item><title>Ma LA 2</title><link>https://ming.ling.moe/posts/ma-la-2/</link><pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate><guid>https://ming.ling.moe/posts/ma-la-2/</guid><description>題目 設 $A\boldsymbol x = \boldsymbol b$ 是增廣矩陣具有最簡形
$$ \begin{bmatrix} \begin{array}{rrrrr|r} 1 &amp;amp; 2 &amp;amp; 0 &amp;amp; 3 &amp;amp; 1 &amp;amp; -2 \\ 0 &amp;amp; 0 &amp;amp; 1 &amp;amp; 2 &amp;amp; 4 &amp;amp; 5 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \\ 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 &amp;amp; 0 \end{array} \end{bmatrix} $$
的線性方程組.
(a) 求出方程組的所有解.
(‌b) 如果 $\boldsymbol a_1 = \begin{bmatrix} 1\\ 1\\ 3\\ 4 \end{bmatrix}$, $\boldsymbol a_3 = \begin{bmatrix}\begin{array}{r} 2\\ -1\\ 1\\ 3 \end{array}\end{bmatrix}$, 確定 $\boldsymbol b$.</description></item><item><title>Ma LA 1</title><link>https://ming.ling.moe/posts/ma-la-1/</link><pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate><guid>https://ming.ling.moe/posts/ma-la-1/</guid><description>題目 用高斯-若爾當消元法解方程組 :
$$ \begin{alignedat}{4} -&amp;amp;x_1 +&amp;amp;x_2 -&amp;amp;&amp;amp;x_3 +&amp;amp;3&amp;amp;x_4 = 0 \\ 3&amp;amp;x_1 +&amp;amp;x_2 -&amp;amp;&amp;amp;x_3 -&amp;amp;&amp;amp;x_4 = 0 \\ 2&amp;amp;x_1 -&amp;amp;x_2 -&amp;amp;2&amp;amp;x_3 -&amp;amp;&amp;amp;x_4 = 0 \end{alignedat} $$
解 構造方程組的增廣矩陣 (augmented matrix) 如下
$$ \begin{bmatrix} \begin{array}{rrrr|r} -1 &amp;amp; 1 &amp;amp; -1 &amp;amp; 3 &amp;amp; 0 \\ 3 &amp;amp; 1 &amp;amp; -1 &amp;amp; -1 &amp;amp; 0 \\ 2 &amp;amp; -1 &amp;amp; -2 &amp;amp; -1 &amp;amp; 0 \end{array} \end{bmatrix} $$
使用初等行運算 III, 以首行 $ (\begin{array}{rrrr|r} -1 &amp;amp; 1 &amp;amp; -1 &amp;amp; 3 &amp;amp; 0 \end{array}) $ 爲主行 (pivotal row) , 主行分別乘以 3 和 2 後分別加在第 2 和第 3 行上，以置 0 第二和第三行的首非 0 元.</description></item><item><title>小學之上，線代之下</title><link>https://ming.ling.moe/posts/consistency-of-linear-systeme/</link><pubDate>Fri, 05 Jun 2020 23:38:04 +0800</pubDate><guid>https://ming.ling.moe/posts/consistency-of-linear-systeme/</guid><description>$m$ 和 $n$ $m \times n$ 線性方程組中，共有 $n$ 個變量，$m$ 條線性方程
感性的來看，方程組中的每一條方程都是一種「約束」，在所有方程的共同約束下，變量的取值範圍（解集）被確定下來，每一條方程的「約束」都是將變量的解集縮小. 舉例來看，設獨立變量 $x$ 與 $y$ 均爲實數，設一個方程組，假設開始時方程組內沒有任何方程. 這時 $(x, y)$ 的解集就是整個 $\mathbb{R}^2$，幾何上看就是整個 $xOy$ 平面.
現在，給方程組內加入一條方程 $$2x + y = 1 \tag{1}$$ 這時顯然有許多點不能出現在解集中了，比如座標原點 $(0, 0)$，因爲 $2 \times 0 + 0 \neq 1$，幾何上看，就是原點不在 $(1)$ 式確定的直線上. 這時，可以這麼感性的理解解集上發生的變化：因爲 $(1)$ 式的加入，解集不能再「肆無忌憚」的想取什麼就取什麼了，解集中的解必須同時「服從」所有方程規定的「條件」. 換句話說解集從原來的整個平面被方程 $(1)$「約束」成了一條直線.
這時讓我們加入第二條方程 $$3x + y = 0 \tag{2}$$ 這時，連原來的一條直線上的點都取不到了，解集中僅僅剩下 $(-1, 3)$ 了，顯然地，兩個方程顯然比一個方程的條件更加「嚴苛」，解集不止要「服從」$(1)$ 式還要「服從」$(2)$ 式，而能同時服從這兩個條件的點，就只剩下 $(-1, 3)$ 了.
如果我們再加入一個方程會怎麼樣？, 假設其爲 $$2x - 2y = 4 \tag{3}$$ 這時，連解集中僅剩的一個點 $(-1 ,3)$ 也不能滿足新加入的這個方程的約束了.</description></item></channel></rss>